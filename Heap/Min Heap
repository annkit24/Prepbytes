//Bottom-up approach



#include <bits/stdc++.h>
using namespace std;
#define ll long long

int parent(int i){
  return (i-1)/2;
}
int left(int i){
  return (2*i+1);
}
int right(int i){
  return (2*i+2);
}
void heapify_down(int arr[],int n,int i){
  int l =left(i);
  int r =right(i);
  int s=i;
  
  if(l<n && arr[l]<arr[i]){
    s=l;
  }
  if(r<n && arr[r]<arr[s]){
    s=r;
  }
  
  if(s!=i)
  {
    swap(arr[i],arr[s]);
    heapify_down(arr,n,s);
  }
}

void build_heap(int arr[],int n){
  for(int i=((n/2)-1);i>=0;i--)
  {
    heapify_down(arr,n,i);
    
  }
}
void print_heap(int arr[],int n){
  
  for(int i=0;i<n;i++){
    cout<<arr[i]<<" ";
  }
  cout<<endl;
}
  
int main()
  {
    //write your code here
    int t;
    cin>>t;
    while(t--){
     ll n;
     cin>>n;
     ll arr[n];
     for(int i=0;i<n;i++){
       cin>>arr[i];
     }
     
     build_heap(arr,n);
     print_heap(arr,n);
     
    }
    return 0;
  }
